[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mysql-to-sqlite3"
description = "A simple Python tool to transfer data from MySQL to SQLite 3"
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.9"
authors = [
    { name = "Klemen Tusar", email = "techouse@gmail.com" },
]
keywords = [
    "mysql",
    "sqlite3",
    "transfer",
    "data",
    "migrate",
    "migration",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Topic :: Database",
]
dependencies = [
    "click>=8.1.3",
    "mysql-connector-python>=9.0.0",
    "pytimeparse2",
    "python-dateutil>=2.9.0.post0",
    "python-slugify>=7.0.0",
    "simplejson>=3.19.0",
    "tqdm>=4.65.0",
    "tabulate",
    "typing-extensions; python_version < \"3.11\"",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://techouse.github.io/mysql-to-sqlite3/"
Documentation = "https://techouse.github.io/mysql-to-sqlite3/"
Repository = "https://github.com/techouse/mysql-to-sqlite3.git"
Issues = "https://github.com/techouse/mysql-to-sqlite3"
Changelog = "https://github.com/techouse/mysql-to-sqlite3/blob/master/CHANGELOG.md"
Sponsor = "https://github.com/sponsors/techouse"
PayPal = "https://paypal.me/ktusar"

[project.optional-dependencies]
dev = [
    "docker>=6.1.3",
    "factory-boy",
    "Faker>=18.10.0",
    "mysqlclient>=2.1.1",
    "pytest>=7.3.1",
    "pytest-cov",
    "pytest-mock",
    "pytest-timeout",
    "types-python-dateutil",
    "types-python-slugify",
    "types-simplejson",
    "sqlalchemy>=2.0.0",
    "sqlalchemy-utils",
    "types-sqlalchemy-utils",
    "tox",
    "types-tqdm",
    "packaging",
    "types-tabulate",
    "requests",
    "types-requests",
    "mypy>=1.3.0",
]

[tool.hatch.version]
path = "src/mysql_to_sqlite3/__init__.py"

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "src",
    "tests",
    "README.md",
    "CHANGELOG.md",
    "CODE-OF-CONDUCT.md",
    "LICENSE",
    "requirements_dev.txt",
]

[tool.hatch.build.targets.wheel]
packages = ["src/mysql_to_sqlite3"]
include = ["src/mysql_to_sqlite3/py.typed"]

[project.scripts]
mysql2sqlite = "mysql_to_sqlite3.cli:cli"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
exclude = '''
(
    /(
        \.eggs
        | \.git
        | \.hg
        | \.mypy_cache
        | \.tox
        | \.venv
        | _build
        | buck-out
        | build
        | dist
        | docs
    )/
    | foo.py
)
'''

[tool.isort]
line_length = 120
profile = "black"
lines_after_imports = 2
known_first_party = "mysql_to_sqlite3"
skip_gitignore = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
norecursedirs = [".*", "venv", "env", "*.egg", "dist", "build"]
minversion = "7.3.1"
addopts = "-rsxX --tb=short --strict-markers"
timeout = 300
markers = [
    "init: Run the initialisation test functions",
    "transfer: Run the main transfer test functions",
    "exceptions: Run SQL exception test functions",
    "cli: Run the cli test functions",
]

[tool.mypy]
mypy_path = "src"
python_version = "3.9"
exclude = [
    "tests",
    "docs",
    "build",
    "dist",
    "venv",
    "env",
]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "pytimeparse2.*,factory.*,docker.*"
ignore_missing_imports = true